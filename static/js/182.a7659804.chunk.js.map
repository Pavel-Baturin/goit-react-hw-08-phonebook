{"version":3,"file":"static/js/182.a7659804.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/views/ContactsPage/ContactsPage.module.css?8bd5","components/views/ContactsPage/ContactsPage.js"],"sourcesContent":["const getContacts = state => state.contacts.items;\n\nconst getIsFetching = state => state.contacts.isFetching;\n\nconst getIsDeliting = state => state.contacts.isDeliting;\n\nconst getError = state => state.contacts.error;\n\nconst getFilter = state => state.filter.value;\n\nexport { getContacts, getIsFetching, getError, getFilter, getIsDeliting };\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"button\":\"ContactForm_button__eSwX9\",\"input\":\"ContactForm_input__Bl93P\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport toast from 'react-hot-toast';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const findContact = contacts?.some(contact =>\n      contact.name.toLowerCase().includes(name.toLowerCase())\n    );\n\n    if (findContact) {\n      toast.error(`${name} is already in contacts!!!`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    toast.success(`${name} added to contact list`);\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleInputChange}\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { DebounceInput } from 'react-debounce-input';\nimport { getFilter } from 'redux/contacts/contacts-selectors';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <DebounceInput\n        className={s.input}\n        type=\"text\"\n        autoComplete=\"off\"\n        value={value}\n        minLength={1}\n        debounceTimeout={300}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"button\":\"ContactItem_button__IRFBz\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { getIsDeliting } from 'redux/contacts/contacts-selectors';\nimport { ThreeDots } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nfunction ContactItem({ contactId, name, number }) {\n  const dispatch = useDispatch();\n  const isDeliting = useSelector(getIsDeliting);\n\n  return (\n    <>\n      <li className={s.item}>\n        {name}: {number}\n        <button\n          disabled={isDeliting}\n          className={s.button}\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(contactId))}\n        >\n          {isDeliting ? (\n            <ThreeDots color=\"lightblue\" height={15} width={40} />\n          ) : (\n            'Delete'\n          )}\n        </button>\n      </li>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  contactId: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"error\":\"ContactList_error__uCB2f\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TailSpin } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport {\n  getContacts,\n  getIsFetching,\n  getError,\n  getFilter,\n} from 'redux/contacts/contacts-selectors';\nimport ContactItem from '../ContactItem/ContactItem';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  const isFetching = useSelector(getIsFetching);\n  const error = useSelector(getError);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  const filtredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul className={s.list}>\n      {isFetching && <TailSpin color=\"lightblue\" height={200} width={200} />}\n      {error && <div className={s.error}>{`ERROR: ${error.message}`}</div>}\n      {filtredContacts.length > 0 &&\n        !isFetching &&\n        filtredContacts.map(({ id, name, number }) => (\n          <ContactItem key={id} contactId={id} name={name} number={number} />\n        ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"ContactsPage_box__-TGd9\",\"title\":\"ContactsPage_title__qgZSh\"};","import { Toaster } from 'react-hot-toast';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport s from './ContactsPage.module.css';\n\nexport default function ContactsPage() {\n  return (\n    <>\n      <Toaster position=\"top-center\" reverseOrder={false} />\n      <div className={s.box}>\n        <h2 className={s.title}>Contacts</h2>\n      </div>\n\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsFetching","isFetching","getIsDeliting","isDeliting","getError","error","getFilter","filter","value","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleInputChange","e","target","className","s","onSubmit","preventDefault","some","contact","toLowerCase","includes","toast","addContact","type","pattern","title","required","onChange","DebounceInput","autoComplete","minLength","debounceTimeout","changeFilter","contactId","disabled","onClick","deleteContact","color","height","width","ContactList","useEffect","fetchContacts","filtredContacts","message","length","map","id","ContactsPage","position","reverseOrder"],"sourceRoot":""}